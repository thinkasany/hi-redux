{"version":3,"file":"redux.js","sources":["../node_modules/_symbol-observable@1.2.0@symbol-observable/es/ponyfill.js","../node_modules/_symbol-observable@1.2.0@symbol-observable/es/index.js","../src/utils/actionTypes.js","../src/utils/isPlainObject.js","../src/createStore.js","../src/utils/warning.js","../src/combineReducers.js","../src/bindActionCreators.js","../src/compose.js","../src/applyMiddleware.js","../src/index.js"],"sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nconst randomString = () =>\n  Math.random()\n    .toString(36)\n    .substring(7)\n    .split('')\n    .join('.')\n\nconst ActionTypes = {\n  INIT: `@@redux/INIT${randomString()}`,\n  REPLACE: `@@redux/REPLACE${randomString()}`,\n  PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`\n}\n\nexport default ActionTypes\n","/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false\n\n  let proto = obj\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n\n  return Object.getPrototypeOf(obj) === proto\n}\n","import $$observable from 'symbol-observable'\n\nimport ActionTypes from './utils/actionTypes'\nimport isPlainObject from './utils/isPlainObject'\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport default function createStore(reducer, preloadedState, enhancer) {\n  if (\n    (typeof preloadedState === 'function' && typeof enhancer === 'function') ||\n    (typeof enhancer === 'function' && typeof arguments[3] === 'function')\n  ) {\n    throw new Error(\n      'It looks like you are passing several store enhancers to ' +\n        'createStore(). This is not supported. Instead, compose them ' +\n        'together to a single function.'\n    )\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState\n    preloadedState = undefined\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.')\n    }\n\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.')\n  }\n\n  let currentReducer = reducer\n  let currentState = preloadedState\n  let currentListeners = []\n  let nextListeners = currentListeners\n  let isDispatching = false\n\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice()\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    if (isDispatching) {\n      throw new Error(\n        'You may not call store.getState() while the reducer is executing. ' +\n          'The reducer has already received the state as an argument. ' +\n          'Pass it down from the top reducer instead of reading it from the store.'\n      )\n    }\n\n    return currentState\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.')\n    }\n\n    if (isDispatching) {\n      throw new Error(\n        'You may not call store.subscribe() while the reducer is executing. ' +\n          'If you would like to be notified after the store has been updated, subscribe from a ' +\n          'component and invoke store.getState() in the callback to access the latest state. ' +\n          'See https://redux.js.org/api-reference/store#subscribelistener for more details.'\n      )\n    }\n\n    let isSubscribed = true\n\n    ensureCanMutateNextListeners()\n    nextListeners.push(listener)\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return\n      }\n\n      if (isDispatching) {\n        throw new Error(\n          'You may not unsubscribe from a store listener while the reducer is executing. ' +\n            'See https://redux.js.org/api-reference/store#subscribelistener for more details.'\n        )\n      }\n\n      isSubscribed = false\n\n      ensureCanMutateNextListeners()\n      const index = nextListeners.indexOf(listener)\n      nextListeners.splice(index, 1)\n      currentListeners = null\n    }\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(\n        'Actions must be plain objects. ' +\n          'Use custom middleware for async actions.'\n      )\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(\n        'Actions may not have an undefined \"type\" property. ' +\n          'Have you misspelled a constant?'\n      )\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.')\n    }\n\n    try {\n      isDispatching = true\n      currentState = currentReducer(currentState, action)\n    } finally {\n      isDispatching = false\n    }\n\n    const listeners = (currentListeners = nextListeners)\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i]\n      listener()\n    }\n\n    return action\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.')\n    }\n\n    currentReducer = nextReducer\n\n    // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n    dispatch({ type: ActionTypes.REPLACE })\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    const outerSubscribe = subscribe\n    return {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.')\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState())\n          }\n        }\n\n        observeState()\n        const unsubscribe = outerSubscribe(observeState)\n        return { unsubscribe }\n      },\n\n      [$$observable]() {\n        return this\n      }\n    }\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT })\n\n  return {\n    dispatch,\n    subscribe,\n    getState,\n    replaceReducer,\n    [$$observable]: observable\n  }\n}\n","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message)\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message)\n  } catch (e) {} // eslint-disable-line no-empty\n}\n","import ActionTypes from './utils/actionTypes'\nimport warning from './utils/warning'\nimport isPlainObject from './utils/isPlainObject'\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  const actionType = action && action.type\n  const actionDescription =\n    (actionType && `action \"${String(actionType)}\"`) || 'an action'\n\n  return (\n    `Given ${actionDescription}, reducer \"${key}\" returned undefined. ` +\n    `To ignore an action, you must explicitly return the previous state. ` +\n    `If you want this reducer to hold no value, you can return null instead of undefined.`\n  )\n}\n\nfunction getUnexpectedStateShapeWarningMessage(\n  inputState,\n  reducers,\n  action,\n  unexpectedKeyCache\n) {\n  const reducerKeys = Object.keys(reducers)\n  const argumentName =\n    action && action.type === ActionTypes.INIT\n      ? 'preloadedState argument passed to createStore'\n      : 'previous state received by the reducer'\n\n  if (reducerKeys.length === 0) {\n    return (\n      'Store does not have a valid reducer. Make sure the argument passed ' +\n      'to combineReducers is an object whose values are reducers.'\n    )\n  }\n\n  if (!isPlainObject(inputState)) {\n    return (\n      `The ${argumentName} has unexpected type of \"` +\n      {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] +\n      `\". Expected argument to be an object with the following ` +\n      `keys: \"${reducerKeys.join('\", \"')}\"`\n    )\n  }\n\n  const unexpectedKeys = Object.keys(inputState).filter(\n    key => !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]\n  )\n\n  unexpectedKeys.forEach(key => {\n    unexpectedKeyCache[key] = true\n  })\n\n  if (action && action.type === ActionTypes.REPLACE) return\n\n  if (unexpectedKeys.length > 0) {\n    return (\n      `Unexpected ${unexpectedKeys.length > 1 ? 'keys' : 'key'} ` +\n      `\"${unexpectedKeys.join('\", \"')}\" found in ${argumentName}. ` +\n      `Expected to find one of the known reducer keys instead: ` +\n      `\"${reducerKeys.join('\", \"')}\". Unexpected keys will be ignored.`\n    )\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(key => {\n    const reducer = reducers[key]\n    const initialState = reducer(undefined, { type: ActionTypes.INIT })\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\n        `Reducer \"${key}\" returned undefined during initialization. ` +\n          `If the state passed to the reducer is undefined, you must ` +\n          `explicitly return the initial state. The initial state may ` +\n          `not be undefined. If you don't want to set a value for this reducer, ` +\n          `you can use null instead of undefined.`\n      )\n    }\n\n    if (\n      typeof reducer(undefined, {\n        type: ActionTypes.PROBE_UNKNOWN_ACTION()\n      }) === 'undefined'\n    ) {\n      throw new Error(\n        `Reducer \"${key}\" returned undefined when probed with a random type. ` +\n          `Don't try to handle ${ActionTypes.INIT} or other actions in \"redux/*\" ` +\n          `namespace. They are considered private. Instead, you must return the ` +\n          `current state for any unknown actions, unless it is undefined, ` +\n          `in which case you must return the initial state, regardless of the ` +\n          `action type. The initial state may not be undefined, but can be null.`\n      )\n    }\n  })\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  const reducerKeys = Object.keys(reducers)\n  const finalReducers = {}\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i]\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(`No reducer provided for key \"${key}\"`)\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key]\n    }\n  }\n  const finalReducerKeys = Object.keys(finalReducers)\n\n  // This is used to make sure we don't warn about the same\n  // keys multiple times.\n  let unexpectedKeyCache\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {}\n  }\n\n  let shapeAssertionError\n  try {\n    assertReducerShape(finalReducers)\n  } catch (e) {\n    shapeAssertionError = e\n  }\n\n  return function combination(state = {}, action) {\n    if (shapeAssertionError) {\n      throw shapeAssertionError\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const warningMessage = getUnexpectedStateShapeWarningMessage(\n        state,\n        finalReducers,\n        action,\n        unexpectedKeyCache\n      )\n      if (warningMessage) {\n        warning(warningMessage)\n      }\n    }\n\n    let hasChanged = false\n    const nextState = {}\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i]\n      const reducer = finalReducers[key]\n      const previousStateForKey = state[key]\n      const nextStateForKey = reducer(previousStateForKey, action)\n      if (typeof nextStateForKey === 'undefined') {\n        const errorMessage = getUndefinedStateErrorMessage(key, action)\n        throw new Error(errorMessage)\n      }\n      nextState[key] = nextStateForKey\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey\n    }\n    hasChanged =\n      hasChanged || finalReducerKeys.length !== Object.keys(state).length\n    return hasChanged ? nextState : state\n  }\n}\n","function bindActionCreator(actionCreator, dispatch) {\n  return function() {\n    return dispatch(actionCreator.apply(this, arguments))\n  }\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch)\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\n      `bindActionCreators expected an object or a function, instead received ${\n        actionCreators === null ? 'null' : typeof actionCreators\n      }. ` +\n        `Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?`\n    )\n  }\n\n  const boundActionCreators = {}\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key]\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch)\n    }\n  }\n  return boundActionCreators\n}\n","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose(...funcs) {\n  if (funcs.length === 0) {\n    return arg => arg\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0]\n  }\n\n  return funcs.reduce((a, b) => (...args) => a(b(...args)))\n}\n","import compose from './compose'\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args)\n    let dispatch = () => {\n      throw new Error(\n        'Dispatching while constructing your middleware is not allowed. ' +\n          'Other middleware would not be applied to this dispatch.'\n      )\n    }\n\n    const middlewareAPI = {\n      getState: store.getState,\n      dispatch: (...args) => dispatch(...args)\n    }\n    const chain = middlewares.map(middleware => middleware(middlewareAPI))\n    dispatch = compose(...chain)(store.dispatch)\n\n    return {\n      ...store,\n      dispatch\n    }\n  }\n}\n","import createStore from './createStore'\nimport combineReducers from './combineReducers'\nimport bindActionCreators from './bindActionCreators'\nimport applyMiddleware from './applyMiddleware'\nimport compose from './compose'\nimport warning from './utils/warning'\nimport __DO_NOT_USE__ActionTypes from './utils/actionTypes'\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\nfunction isCrushed() {}\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  typeof isCrushed.name === 'string' &&\n  isCrushed.name !== 'isCrushed'\n) {\n  warning(\n    'You are currently using minified code outside of NODE_ENV === \"production\". ' +\n      'This means that you are running a slower development build of Redux. ' +\n      'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' +\n      'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' +\n      'to ensure you have the correct code for your production build.'\n  )\n}\n\nexport {\n  createStore,\n  combineReducers,\n  bindActionCreators,\n  applyMiddleware,\n  compose,\n  __DO_NOT_USE__ActionTypes\n}\n"],"names":["ponyfill","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","Object","getPrototypeOf","createStore","reducer","preloadedState","enhancer","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","unsubscribe","index","indexOf","splice","dispatch","action","type","listeners","i","length","replaceReducer","nextReducer","observable","outerSubscribe","observer","TypeError","observeState","next","$$observable","warning","message","console","error","e","getUndefinedStateErrorMessage","key","actionType","actionDescription","String","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","call","match","unexpectedKeys","filter","hasOwnProperty","forEach","assertReducerShape","initialState","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","combination","state","warningMessage","hasChanged","nextState","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","compose","funcs","arg","reduce","a","b","applyMiddleware","middlewares","store","middlewareAPI","chain","map","middleware","isCrushed","process","name"],"mappings":"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"}